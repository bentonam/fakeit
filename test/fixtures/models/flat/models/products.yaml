name: Products
type: object
key: _id
data:
  min: 100
  max: 500
properties:
  _id:
    type: string
    description: The document id
    data:
      post_build: "`product_${this.product_id}`"
  doc_type:
    type: string
    description: The document type
    data:
      value: "product"
  product_id:
    type: string
    description: Unique identifier representing a specific product
    data:
      build: "faker.datatype.uuid();"
  price:
    type: double
    description: The product price
    data:
      build: "chance.dollar().slice(1)"
  sale_price:
    type: double
    description: The product price
    data:
      build: "chance.bool({ likelihood: 60 }) ? 0 : null"
      post_build: |
        if (this.sale_price != null) {
          let sale_price = this.price - (this.price * chance.floating({ min: 0.10, max: 0.65, fixed: 2 }))
          return chance.dollar({ min: sale_price, max: sale_price }).slice(1)
        }
  display_name:
    type: string
    description: Display name of product.
    data:
      fake: "{{commerce.productName}}"
  short_description:
    type: string
    description: Description of product.
    data:
      fake: "{{lorem.paragraphs(1)}}"
  long_description:
    type: string
    description: Description of product.
    data:
      fake: "{{lorem.paragraphs(5)}}"
  keywords:
    type: array
    description: An array of keywords
    items:
      type: string
      data:
        min: 2
        max: 8
        build: "faker.random.word()"
  availability:
    type: string
    description: The availability status of the product
    data:
      build: "faker.random.arrayElement([ 'Preorder', 'In-Stock', 'Out of Stock', 'Discontinued' ]);"
  availability_date:
    type: integer
    description: An epoch time of when the document was last modified
    data:
      fake: "{{date.recent}}"
      post_build: "new Date(this.availability_date).getTime();"
  product_slug:
    type: string
    description: The URL friendly version of the product name
    data:
      post_build: "faker.helpers.slugify(this.display_name).toLowerCase();"
  category:
    type: string
    description: Category for the Product
    data:
      fake: "{{commerce.department}}"
  category_slug:
    type: string
    description: The URL friendly version of the category name
    data:
      post_build: "faker.helpers.slugify(this.category).toLowerCase();"
  image:
    type: string
    description: Image URL representing the product.
    data:
      fake: "{{image.image}}"
  created_on:
    type: integer
    description: An epoch time of when the document was first created
    data:
      fake: "{{date.past}}"
      post_build: "new Date(this.created_on).getTime();"
  modified_on:
    type: integer
    description: An epoch time of when the document was last modified
    data:
      fake: "{{date.recent}}"
      post_build: "new Date(this.modified_on).getTime();"
